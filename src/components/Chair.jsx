/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 public/models/chair.gltf 
*/

import { useGLTF, useTexture } from '@react-three/drei'
import * as THREE from 'three'
import { useCustomization } from '../context/Customization'

const Chair = (props) => {

  const {material, legs, chairColor, cushionColor} = useCustomization()

  const { nodes, materials } = useGLTF('./models/chair.gltf')

  const leatherTextureProps = useTexture({
    // map: './textures/leather/leather_basecolor.jpg',
    normalMap: './textures/leather/leather_normal.jpg',
    roughnessMap: './textures/leather/leather_basecolor.jpg',
    aoMap: './textures/leather/leather_ambientOcclusion.jpg',
  })

  // leatherTextureProps.map.repeat.set(2.4, 2.4)
  leatherTextureProps.normalMap.repeat.set(2.4, 2.4)
  leatherTextureProps.roughnessMap.repeat.set(2.4, 2.4)
  leatherTextureProps.aoMap.repeat.set(2.4, 2.4)


  // leatherTextureProps.map.wrapS = leatherTextureProps.map.wrapT = THREE.RepeatWrapping
  leatherTextureProps.normalMap.wrapS = leatherTextureProps.normalMap.wrapT = THREE.RepeatWrapping
  leatherTextureProps.roughnessMap.wrapS = leatherTextureProps.roughnessMap.wrapT = THREE.RepeatWrapping
  leatherTextureProps.aoMap.wrapS = leatherTextureProps.aoMap.wrapT = THREE.RepeatWrapping

  const fabricTextureProps = useTexture({
    // map: './textures/fabric/cushion_basecolor.jpg',
    normalMap: './textures/fabric/cushion_normal.jpg',
    roughnessMap: './textures/fabric/cushion_basecolor.jpg',
    aoMap: './textures/fabric/cushion_ambientOcclusion.jpg',
  })

  // fabricTextureProps.map.repeat.set(1, 1)
  fabricTextureProps.normalMap.repeat.set(1, 1)
  fabricTextureProps.roughnessMap.repeat.set(1, 1)
  leatherTextureProps.aoMap.repeat.set(1, 1)


  // fabricTextureProps.map.wrapS = fabricTextureProps.map.wrapT = THREE.RepeatWrapping
  fabricTextureProps.normalMap.wrapS = fabricTextureProps.normalMap.wrapT = THREE.RepeatWrapping
  fabricTextureProps.roughnessMap.wrapS = fabricTextureProps.roughnessMap.wrapT = THREE.RepeatWrapping
  fabricTextureProps.aoMap.wrapS = fabricTextureProps.aoMap.wrapT = THREE.RepeatWrapping

  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Chair.geometry}>
        <meshStandardMaterial
          {...material === "leather" ? leatherTextureProps : fabricTextureProps}
          color={chairColor.color}
        />
      </mesh>
      <mesh geometry={nodes.Cushion.geometry} position={[0, 0.064, 0.045]}>
      <meshStandardMaterial {...fabricTextureProps} color={cushionColor.color} />
      </mesh>
      <mesh geometry={nodes.Legs1.geometry} material={materials.Legs} visible={legs == 1} />
      <mesh geometry={nodes.Legs2.geometry} material={materials.Legs} visible={legs == 2} />
    </group>
  )
}

useGLTF.preload('./models/chair.gltf')

export default Chair;